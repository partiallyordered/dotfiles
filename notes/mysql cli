
#### Connecting
```
mysql \
    --password=password-here \
    -h hostname-here \
    -u username-here \
    -D database-name
```

#### Running a sql script, output in terminal
```
mysql \
    -t \ # print the table outline
    --password=password-here \
    -h hostname-here \
    -u username-here \
    -D database-name < script.sql
```

#### List tables
```
MySQL [database-name]> show tables;
```

#### Help (question mark)
```
MySQL [database-name]> ?
```

#### Server-side help
```
MySQL [database-name]> help contents
```

#### Show table with column comments
```sql
SHOW FULL COLUMNS FROM $table_name;
```

#### Show table create instruction (useful to see constraints)
```sql
SHOW CREATE TABLE $table_name;
```

#### Show indexes for table
```sql
SHOW INDEXES IN $table_name;
```

#### Upsert
Do nothing if a unique key already exists:
```sql
INSERT IGNORE INTO users (name, age) VALUES ('ole jimmy', 93);
```
Update existing data in-place:
```sql
INSERT INTO users (name, age) VALUES ('ole jimmy', 93) ON DUPLICATE KEY UPDATE age=age+1;
```
Delete the existing row, then insert the new row, when a unique key already exists:
```sql
REPLACE INTO users (name, age) VALUES ('ole jimmy', 93);
```

#### Grant privileges on a schema
```sql
GRANT ALL PRIVILEGES ON schema_name.* TO 'username'@'host';
```
when 'username' is logged in via 'host'. For username from any host:
```sql
GRANT ALL PRIVILEGES ON schema_name.* TO 'username'@'%';
```

#### Which tables reference this one?
```sql
select table_name
from information_schema.KEY_COLUMN_USAGE
where table_schema = 'my_database'
and referenced_table_name = 'my_table_here';
```
