
#### mkDerivation
See:
https://nixos.org/manual/nixpkgs/stable/#chap-stdenv
https://nixos.org/manual/nix/stable/#ssec-derivation
https://github.com/NixOS/nixpkgs/issues/18678#issuecomment-569477884

#### Haskell
`cabal2nix` example to generate a nix derivation from a cabal project in Github:
```sh
cabal2nix https://github.com/xmonad/xmonad
cabal2nix https://github.com/msk-/xmonad-contrib
```

`cabal2nix` example to generate a nix derivation from a local project. From:
https://haskell4nix.readthedocs.io/nixpkgs-users-guide.html#how-to-create-nix-builds-for-your-own-private-haskell-packages
```sh
cabal2nix . > foo.nix
```
Now create the following:
`default.nix`:
```nix
{ nixpkgs ? import <nixpkgs> {}, compiler ? "ghc8103" }:
nixpkgs.pkgs.haskell.packages.${compiler}.callPackage ./foo.nix { }
```
`shell.nix`:
```nix
{ nixpkgs ? import <nixpkgs> {}, compiler ? "ghc8103" }:
(import ./default.nix { inherit nixpkgs compiler; }).env
```
Then, to build:
```sh
nix-build -o foo
```

##### Misc
https://nixos.org/patchelf.html
https://brianmckenna.org/blog/running_binaries_on_nixos
https://superuser.com/questions/912389/how-do-i-install-the-32-bit-dynamic-linker-on-64-bit-nixos
