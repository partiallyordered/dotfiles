
#### mkDerivation
See:
https://nixos.org/manual/nixpkgs/stable/#chap-stdenv
https://nixos.org/manual/nix/stable/#ssec-derivation
https://github.com/NixOS/nixpkgs/issues/18678#issuecomment-569477884
https://nixos.org/manual/nixpkgs/stable/#sec-stdenv-phases

#### Rust
##### Build with openssl, pkgconfig, zlib
From: https://users.rust-lang.org/t/solved-how-do-i-build-cargo-on-nixos/7620/5
`default.nix`:
```nix
with import <nixpkgs> {};
mkShell {
  buildInputs = [ pkgconfig openssl cmake zlib libgit2 ];
  CFG_DISABLE_CROSS_TESTS = "1";
}
```
Inside `nix-shell` run `cargo build` or similar.

#### Haskell
`cabal2nix` example to generate a nix derivation from a cabal project in Github:
```sh
cabal2nix https://github.com/xmonad/xmonad
cabal2nix https://github.com/msk-/xmonad-contrib
```

`cabal2nix` example to generate a nix derivation from a local project. From:
https://haskell4nix.readthedocs.io/nixpkgs-users-guide.html#how-to-create-nix-builds-for-your-own-private-haskell-packages
```sh
cabal2nix . > foo.nix
```
Now create the following:
`default.nix`:
```nix
{ nixpkgs ? import <nixpkgs> {}, compiler ? "ghc8103" }:
nixpkgs.pkgs.haskell.packages.${compiler}.callPackage ./foo.nix { }
```
`shell.nix`:
```nix
{ nixpkgs ? import <nixpkgs> {}, compiler ? "ghc8103" }:
(import ./default.nix { inherit nixpkgs compiler; }).env
```
Then, to build:
```sh
nix build -L -o foo
```

#### Create a single-file derivation
* Pulls the single file from githubusercontent.com
* Skips the unpack phase
* The sha256 is calculated with `nix-prefetch-url $url`
* Install just copies the source to the destination and sets the execute bit

```nix
# A file preview script for integration with skim/fzf
skimPreviewScript = pkgs.stdenv.mkDerivation rec {
  version = "02a192ea0bed22a015e005b281e55e0da2a8e496";
  pname = "skim-preview-script";
  src = builtins.fetchurl {
    url = "https://raw.githubusercontent.com/junegunn/fzf.vim/02a192ea0bed22a015e005b281e55e0da2a8e496/bin/preview.sh";
    sha256 = "1jjir34n34hp5r6ycy5d8ccs9cqql12g34xy1zhh8lhazvlp30yb";
  };
  dontUnpack = true;
  installPhase = ''
    mkdir -p $out/bin
    cp $src $out/bin/preview.sh
    chmod +x $out/bin/preview.sh
    '';
};
```


##### Misc
https://nixos.org/patchelf.html
https://brianmckenna.org/blog/running_binaries_on_nixos
https://superuser.com/questions/912389/how-do-i-install-the-32-bit-dynamic-linker-on-64-bit-nixos
https://nixos.wiki/wiki/Nix_Cookbook
