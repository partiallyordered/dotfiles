(defwindow topbar
  :stacking "fg"
  :windowtype "dock"
  :reserve (struts :distance "3%" :side "top")
  :wm-ignore false
  :geometry (geometry :width "100%" :height "3%")
  (topbar_layout))

(defpoll time :interval "5s"
  :initial `date +'{"hour":"%H","min":"%M"}'`
  `date +'{"hour":"%H","min":"%M"}'`)

(deflisten default_audio_sink
  :initial ""
  './scripts/watch_pipewire_default_sink.sh')

(deflisten battery_json
  :initial `{"time_to_empty_seconds":0, "time_to_full_seconds":0, "energy_rate_watts": 0, "percentage": 0}`
  'dbus-upower-monitor')

(deflisten workspaces_json :initial "[]"
                      './scripts/watch_xmonad_workspace_log.sh')

(defwidget workspaces []
  (box
    :spacing 0
    :space-evenly false
    (for ws in workspaces_json
      (workspace :ws_details ws))))

(defwidget workspace [ws_details]
  (button :onclick "xmonadctl -a FOCUS_WORKSPACE ${ws_details.name}"
         :valign "baseline"
         :halign "center"
         :width 20
         :visible {ws_details.current || ws_details.visible || ws_details.hidden}
         :class "workspace ws-curr-${ws_details.current} ws-vis-${ws_details.visible} ws-hid-${ws_details.hidden} ws-urg-${ws_details.urgent} ws-name-${ws_details.name}"
      {ws_details.name}))

(defwidget _time []
  (box :spacing 15 :class "tm-box" :space-evenly false
    (label :class "icon" :text "")
    (label :text "${time.hour}  ${time.min}")))

(defwidget _battery [percentage status time_to_empty
                    time_to_full energy_rate one two
                    three four five six seven charge]
  ;; TODO:
  ;; - alert colour for low power (as defined by upower?)
  ;; - show warning if battery *capacity* (this is *not* percentage) is reporting below 75% (according to the upower doc this is
  ;;   when a battery should be replaced- but perhaps double-check this).
  ;;   >  A capacity value less than 75% is usually a sign that you should renew your battery
  ;;   - https://upower.freedesktop.org/docs/Device.html
  (box :class "bat-box" :space-evenly false :spacing 8
    (transform
      :rotate -25
      :translate-x "-135%"
      :translate-y "-20%"
      (label :class "icon" :text {status == 'Charging' ? charge :
        percentage < 15 ? seven :
          percentage < 30 ? six :
            percentage < 45 ? five :
              percentage < 60 ? four :
                percentage < 75 ? three :
                  percentage < 95 ? two : one}))
    (label :class "text" :text "${round(percentage, 0)}%")
    (label
      :class "text"
      :text "${(status == 'Charging' ? '+' : '-')}${round(energy_rate, 0)}W")
    (label
      :class "text"
      :visible {status == 'Charging'}
      :text "${round(time_to_full / 3600 - 0.5, 0)}h${round((time_to_full % 3600) / 60 - 0.5, 0)}m")
    (label
      :class "text"
      :visible {status == 'Discharging'}
      :text "${round(time_to_empty / 3600 - 0.5, 0)}h${round((time_to_empty % 3600) / 60 - 0.5, 0)}m")
  ))

(defwidget _volume []
  (eventbox
    :onscroll "./scripts/modify_volume.sh {}"
    :onclick "wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle"
    (box :class "volume-box"
      (label :class "icon" :text {default_audio_sink.route.props.mute ? "" :
        default_audio_sink.route.props.channelVolumes[0] < 0.33 ? "" :
          default_audio_sink.route.props.channelVolumes[0] < 0.66 ? "" : ""})
      (label :class "text" :text "${round(default_audio_sink.route.props.channelVolumes[0] * 100, 0)}%"))))

(defwidget topbar_layout []
  (box :class "topbar-container"
       :orientation "horizontal"
       :space-evenly false
    (box :class "topbar-container-left"
         :orientation "horizontal"
         :halign "start"
         :space-evenly false
      (workspaces))
    (box :class "topbar-container-right"
         :orientation "horizontal"
         :halign "end"
         :space-evenly false
      (_time)
      (_volume)
      (_battery :status {battery_json.state}
                :energy_rate {battery_json.energy_rate_watts}
                :percentage {battery_json.percentage}
                :time_to_empty {battery_json.time_to_empty_seconds}
                :time_to_full {battery_json.time_to_full_seconds}
                :charge "" :one "" :two "" :three "" :four ""
                :five "" :six "" :seven ""))))

;; vim: ft=yuck
